<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>webshopprj.com</groupId>
  <artifactId>webshopprj</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>
  <properties>
  	<org.springframework-version>5.2.19.RELEASE</org.springframework-version>	<!-- 스프링 버전 -->
  	<spring.security.version>5.1.13.RELEASE</spring.security.version>			<!-- 스프링 security 버전, 스프링 security 버전은 spring버전보다 항상 낮아야 한다.!! -->
  	<maven.compiler.source>1.8</maven.compiler.source>
  	<maven.compiler.target>1.8</maven.compiler.target>
  </properties>
  <dependencies>
  	<dependency>
  		<groupId>org.springframework</groupId>
  		<artifactId>spring-webmvc</artifactId>
  		<version>${org.springframework-version}</version>
  	</dependency>
  	<dependency>
	    <groupId>org.apache.tomcat</groupId>
	    <artifactId>tomcat-api</artifactId>
	    <version>9.0.55</version>
	</dependency>
  	<dependency>
  		<groupId>jstl</groupId>
  		<artifactId>jstl</artifactId>
  		<version>1.2</version>
  	</dependency>
  	<!-- JSTL : JSP표준 태그 라이브러리(자신만의 태그를 추가할 수 있는 기능 및 c:if, c:forEach 형식의 태그들을 제공  -->
  	<dependency>
  		<groupId>org.springframework</groupId>
  		<artifactId>spring-jdbc</artifactId>
  		<version>${org.springframework-version}</version>
  	</dependency>
  	
	<dependency>
	    <groupId>junit</groupId>
	    <artifactId>junit</artifactId>
	    <version>4.13.2</version>
	    <scope>test</scope>
	</dependency>
  	<!-- junit : 전체 프로젝트를 WAS를 구동하지 않고 테스트할 수 있게 해주는 라이브러리 -->
  	
	<dependency>
	    <groupId>org.springframework</groupId>
	    <artifactId>spring-test</artifactId>
	    <version>${org.springframework-version}</version>
	    <scope>test</scope>
	</dependency>
	<!-- JUnit을 확장한 스프링의 테스트 라이브러리 -->
	<!-- <scope>의 값을 test로 사용할 경우, src/main/java 단에서는 사용이 불가능해진다. 만약 사용하고 싶다면 scope를 해제해야 한다.
	(src/test/java단에서는 scope처리를 해도 쉽게 사용가능하다) -->


	<dependency>
		<groupId>mysql</groupId>
		<artifactId>mysql-connector-java</artifactId>
		<version>8.0.28</version>
	</dependency>
	<dependency>
		<groupId>org.apache.tiles</groupId>
		<artifactId>tiles-extras</artifactId>
		<version>3.0.8</version>
	</dependency>
	<dependency>
		<groupId>org.apache.tiles</groupId>
		<artifactId>tiles-servlet</artifactId>
		<version>3.0.8</version>
	</dependency>
	<dependency>
		<groupId>org.apache.tiles</groupId>
		<artifactId>tiles-jsp</artifactId>
		<version>3.0.8</version>
	</dependency>
	<dependency>
		<groupId>org.springframework.security</groupId>
		<artifactId>spring-security-core</artifactId>
		<version>${spring.security.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework.security</groupId>
		<artifactId>spring-security-config</artifactId>
		<version>${spring.security.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework.security</groupId>
		<artifactId>spring-security-web</artifactId>
		<version>${spring.security.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework.security</groupId>
		<artifactId>spring-security-taglibs</artifactId>
		<version>${spring.security.version}</version>
	</dependency>
	
	<!-- https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload -->
	<dependency>
	    <groupId>commons-fileupload</groupId>
	    <artifactId>commons-fileupload</artifactId>
	    <version>1.4</version>
	</dependency>
	<!-- 파일 업로드용 dependency -->
	
  </dependencies>
</project>

<!--  pom.xml(Project Object Model)은 Maven의 기본 작업 단위이며, 프로젝트를 빌드하기 위해 Maven에서 사용하는 프로젝트 및 구성 세부사항이 포함된 XML파일이다. -->